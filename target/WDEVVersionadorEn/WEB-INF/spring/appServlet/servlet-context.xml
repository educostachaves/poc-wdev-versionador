<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jaxws="http://cxf.apache.org/jaxws"
	xmlns:jaxrs="http://cxf.apache.org/jaxrs"
    xmlns:cxf="http://cxf.apache.org/core"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
		http://cxf.apache.org/jaxrs http://cxf.apache.org/schemas/jaxrs.xsd
		http://cxf.apache.org/jaxws http://cxf.apache.org/schemas/jaxws.xsd
        http://cxf.apache.org/core http://cxf.apache.org/schemas/core.xsd">
	
	<!-- DispatcherServlet Context: defines this servlet's request-processing 
		infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />
	
	<!-- Resolves views selected for rendering by @Controllers to .jsp resources 
		in the /WEB-INF/views directory -->
	<beans:bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>

	<beans:bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<beans:property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<beans:property name="url"
			value="jdbc:mysql://localhost:3306/versionador" />
		<beans:property name="username" value="root" />
		<beans:property name="password" value="root" />
	</beans:bean>

	<!-- Hibernate 4 SessionFactory Bean definition -->
	<beans:bean id="hibernate4AnnotatedSessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<beans:property name="dataSource" ref="dataSource" />
		<beans:property name="annotatedClasses">
			<beans:list>
				<beans:value>com.versionador.spring.model.Gd</beans:value>
			</beans:list>
		</beans:property>
		<beans:property name="hibernateProperties">
			<beans:props>
				<beans:prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect
				</beans:prop>
				<beans:prop key="hibernate.show_sql">true</beans:prop>
			</beans:props>
		</beans:property>
	</beans:bean>
	
	<beans:bean id="gdDAO" class="com.versionador.spring.dao.GdDAOImpl">
		<beans:property name="sessionFactory" ref="hibernate4AnnotatedSessionFactory" />
	</beans:bean>
	<beans:bean id="gdService" class="com.versionador.spring.service.GdServiceImpl">
		<beans:property name="gdDAO" ref="gdDAO"></beans:property>
	</beans:bean>
	<beans:bean id="queueService" class="com.versionador.spring.service.QueueServiceImpl" />
	
	<tx:annotation-driven transaction-manager="transactionManager"/>
	
	<beans:bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<beans:property name="sessionFactory" ref="hibernate4AnnotatedSessionFactory" />
	</beans:bean>
	
	<context:component-scan base-package="com.versionador.spring" />
	
	<!-- For times when you just need to invoke a method on a specific object -->
	<beans:bean id="fileReaderJobDetail" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<beans:property name="targetObject" ref="fileReaderScheduler" />
		<beans:property name="targetMethod" value="readFiles" />
	</beans:bean>

	<!-- Run the job every 5 seconds only on weekends -->
	<beans:bean id="cronTrigger"  class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		<beans:property name="jobDetail" ref="fileReaderJobDetail" />
		<beans:property name="cronExpression" value="0 0/1 * 1/1 * ? *" />
	</beans:bean>

	<!-- Scheduler factory bean to glue together jobDetails and triggers to Configure Quartz Scheduler -->
	<beans:bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<beans:property name="jobDetails">
			<beans:list>
				<beans:ref bean="fileReaderJobDetail" />
			</beans:list>
		</beans:property>
		<beans:property name="triggers">
			<beans:list>
				<beans:ref bean="cronTrigger" />
			</beans:list>
		</beans:property>
	</beans:bean>
	
	<!-- Conexao ActiveMQ -->
    <beans:bean id="connectionFactory" class="org.apache.activemq.ActiveMQConnectionFactory">
        <beans:property name="brokerURL" value="tcp://localhost:61616" />
    </beans:bean>
 
    <!-- Jms Template -->
    <beans:bean id="jsmTemplate" class="org.springframework.jms.core.JmsTemplate">
        <beans:property name="connectionFactory" ref="connectionFactory" />
    </beans:bean>
 
    <!-- Filas -->
    <beans:bean id="aprovedQueue" class="org.apache.activemq.command.ActiveMQQueue">
        <beans:constructor-arg index="0" value="aprovedQueue" />
    </beans:bean>
    
    <beans:bean id="failedQueue" class="org.apache.activemq.command.ActiveMQQueue">
        <beans:constructor-arg index="0" value="failedQueue" />
    </beans:bean>
     
    <!-- Consumidor/Listener -->
    <beans:bean id="aprovedListener" class="com.versionador.spring.jms.MsgListener" />
     
    <!-- Container de Listeners -->
    <beans:bean class="org.springframework.jms.listener.SimpleMessageListenerContainer">
        <beans:property name="connectionFactory" ref="connectionFactory" />
        <beans:property name="destination" ref="aprovedQueue" />
        <beans:property name="messageListener" ref="aprovedListener" />
    </beans:bean>
	
	<!-- Apache CXF --> 
  	<beans:bean id="gdProvider" class="com.versionador.spring.service.rest.GdProviderImpl">
  		<beans:property name="gdService" ref="gdService"/>
  	</beans:bean>
    <beans:bean id="jsonProvider" class="org.codehaus.jackson.jaxrs.JacksonJsonProvider" />
    
    <jaxrs:server id="GdProviderService" address="/">
        <jaxrs:serviceBeans>
        	<beans:ref bean="gdProvider"/>
        </jaxrs:serviceBeans>
        <jaxrs:providers>
            <beans:ref bean="jsonProvider" />
        </jaxrs:providers>
    </jaxrs:server>
    

</beans:beans>
